= GStreamer release schedule for Jan-June 2009 =

Release schedule for the 1st half of 2009.

== Summary Schedule ==
This is the quick summary of the releases for the 6 months January 2009 - June 2009. See below for the full schedule
||<style="text-align: center;"> '''Date''' || '''Task''' ||
||<bgcolor="#c5d2c8" style="text-align: center;"> Jan 5 || '''Core/Base/Python/Bad freeze.''' ||
||<bgcolor="#c5d2c8" style="text-align: center;"> Jan 19 || Core 0.10.22, Base 0.10.22, Python 0.10.14 Bad 0.10.10 release ||
||<bgcolor="#c5d2c8" style="text-align: center;"> Feb 2 || '''Good/Bad freeze. 4 day plugin window opens''' ||
||<bgcolor="#c5d2c8" style="text-align: center;"> Feb 16 || Good 0.10.12 release (no Bad release this time, since it was released recently and there were no plugin moves) ||
||<bgcolor="#c5d2c8" style="text-align: center;"> Mar 2 || '''Ugly/FFmpeg/Bad freeze. 4 day plugin window opens''' ||
||<bgcolor="#c5d2c8" style="text-align: center;"> Mar 16 || Ugly 0.10.11, FFmpeg 0.10.7, Bad 0.10.11 (if needed) release ||
||<bgcolor="#c5d2c8" style="text-align: center;"> Apr 6 || '''Core/Base/Python freeze.''' ||
||<bgcolor="#c5d2c8" style="text-align: center;"> Apr 20 || Core 0.10.23, Base 0.10.23, Python 0.10.15 release ||
||<bgcolor="#c5d2c8" style="text-align: center;"> May 2 || '''Good/Bad freeze. 4 day plugin window opens''' ||
||<bgcolor="#c5d2c8" style="text-align: center;"> May 18 || Good 0.10.13, Bad 0.10.12 release ||
||<bgcolor="#c5d2c8" style="text-align: center;"> Jun 1 || '''Ugly/FFmpeg/Bad freeze. 4 day plugin window opens''' ||
||<bgcolor="#c5d2c8" style="text-align: center;"> June 15 || Ugly 0.10.12, FFmpeg 0.10.8, Bad 0.10.13 (if needed) release ||

== Process ==
At the moment there are 7 GStreamer modules included in the schedule:

 * GStreamer Core
 * GStreamer Base Plugins
 * GStreamer Good Plugins
 * GStreamer Bad Plugins
 * GStreamer Ugly Plugins
 * GStreamer FFmpeg
 * GStreamer Python Bindings
Modules not included:

 * Gnonlin - released by Edward Hervey as he sees fit
 * GStreamer OpenGL support - doesn't exist yet :)
Each module will see a release every 3 months. For an explanation of the freezes please see [[ReleasePlanning/Freezes|here]].

== Release procedure for Core/Base/Python ==
The release procedure is to freeze the modules, and then make a series of pre-release tarballs. 2 weeks later, the final release is done. At the discretion of the release manager, this may happen after only one week if no bugs are found, and we can all go to the pub.

The modules thaw the day after the final release, just in case a paper bag release is needed.

 * Day 0: Code Freeze Core/Base/Python. Make first pre-release tarballs
 * Day 3: Make 2nd pre-releases if any blocker bugs have been identified and fixed.
 * Day 7: Make 3rd pre-releases if any new blocker bugs have been identified and fixed.
 * Day 14: Release new version. Good/Bad/Ugly/FFmpeg are now dependency frozen.
 * Day 15: Code thaw for Core/Base/Python.

== Release procedure for plugin modules ==
Plugin module releases begin with a plugin move window (4 days), then freeze and pre-releases begin. 2 weeks later the final release is done. At the discretion of the release manager, this may happen after only one week if no bugs are found.

Code & dependency freezes end the day after the final release.

 * Day 0: Plugin move window opens. Commits should be done with care.
 * Day 4: Plugin move window closes. First pre-releases made. Modules are frozen for commits.
 * Day 9: Make 2nd pre-releases if any blocker bugs have been identified and fixed.
 * Day 14: Release new versions
 * Day 15: Code and dependency thaw for the newly released modules.
Additionally, when Good/Bad are released (together), the Bad module is branched so that later a 2nd option 'plugin moves' release of Bad can be done simultaneously with Ugly ''if needed''

We may vary the schedule to skip an FFmpeg release from time to time if it seems that nothing exciting has been changed, since releases of FFmpeg require a lot of testing due to the quantity of codecs.

<<Anchor(PluginMoves)>>

== Plugin Moves ==
From time to time, plugins improve in quality sufficiently to warrant moving them from Bad to Good or Bad to Ugly (or sometimes vice versa in cases of neglect). Such plugin moves require simultaneous releases of the modules involved so that we never ship tarballs with conflicting installed plugins.

To support this, the schedule provides plugin move windows during which plugins can be moved. Further, after the Good/Bad release, the Bad module will be branched. If during the next Ugly/FFmpeg release phase plugin moves happen between the Bad & Ugly modules, a 2nd release of the Bad plugins will occur from the branch '''with the only changes being the removal or addition of plugins from the Ugly module'''.

